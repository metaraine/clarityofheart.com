doctype html

html.spread(lang='en')
head
  meta(charset='utf-8')
  meta(name="viewport" content="width=device-width, initial-scale=1")
  title Raine Revere
  link(rel='stylesheet' type='text/css' href='http://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/3.1.1/css/bootstrap.min.css')
  link(rel='stylesheet' type='text/css' href='http://fonts.googleapis.com/css?family=Quicksand')
  link(rel='stylesheet' type='text/css' href='/styles/main.css')
  include analytics.html

mixin triangle(triangleSize=40, triangleBorderSize=2)
  svg.triangle-svg(width=triangleSize height=triangleSize viewBox="0 0 " + (triangleSize + 10) + " " + (triangleSize + 10) xmlns="http://www.w3.org/2000/svg")
    polygon.triangle(points=((triangleSize + triangleBorderSize)/2) + "," + triangleBorderSize*3 + " " + triangleSize + "," + triangleSize + " " + triangleBorderSize + "," + triangleSize)

mixin triangleUp(triangleSize=40, triangleBorderSize=2)
  svg.triangle-svg.triangle-up-svg(width=triangleSize height=triangleSize viewBox="0 0 " + (triangleSize + 10) + " " + (triangleSize + 10) xmlns="http://www.w3.org/2000/svg")
    polygon.triangle(points=
      ((triangleSize + triangleBorderSize)/2) + "," + (triangleSize - triangleBorderSize*3) + " " +
      triangleBorderSize + "," + triangleBorderSize + " " + 
      (triangleSize - triangleBorderSize) + "," + triangleBorderSize
    )

mixin triangle-row(numTrianglesInRow=7)
  .triangle-row
    .triangle-row-even
      - for (var i=0; i<numTrianglesInRow; i++)
        +triangleUp
        +triangle
      +triangleUp
    .triangle-row-odd
      - for (var i=0; i<numTrianglesInRow; i++)
        +triangle
        +triangleUp
      +triangle

mixin site(title1, title2)
  - numRowsTop = 3
  - numRowsBottom = 5
  .spread.center.pad&attributes(attributes)
    .center-wrapper.rel
      .triangle-rows-top
        - for (var r=0; r<numRowsTop; r++)
          +triangle-row

      h1
        .line-one Raine
        .line-two Revere
      hr
      h2#title1: i= title1
      h2#title2: i= title2
      .pad-sm

      p.info-email-static 
        | email: 
        span.point raine@clarityofheart.com
      p.info-phone
        | phone: 
        span.point 720-319-8080
      p.info-email-live
        | email: 
        a.point(href='mailto:raine@clarityofheart.com') raine@clarityofheart.com
      p.info-twitter
        | twitter: 
        a.point(href='https://twitter.com/metaraine') @metaraine
      p.info-github
        | github: 
        a.p(href='https://github.com/raineorshine') raineorshine
      .info-space
        div(style="margin-top: 40px;")
      .pad-sm

      .triangle-rows-bottom
        - for (var r=0; r<numRowsBottom; r++)
          +triangle-row

body.spread.mouse-move-disabled
  +site("Contemplative Psychotherapist", "Cryptocurrency Engineer").site-therapy
  +site("Contemplative Psychotherapist", "Cryptocurrency Engineer").site-engineering

  section.dark.pad-quarter.center.spread

    .nav-content(rel='home')
      .block.pad
        h1 Raine Revere is a practicing therapist and cryptocurrency engineer. 
      .block.pad-lg
        h2 Learn more about Raine's work in:
      .block
        a.nav-link.button.hspace-lg.vspace-sm(href='javascript:void(0);' rel='therapy') Therapy
        a.nav-link.button.hspace-lg.vspace-sm(href='javascript:void(0);' rel='crypto') Crypto

    .nav-content(rel='therapy').hide

      .block.pad.left.clear
        h1.vspace Therapy
        p I offer an open, nonjudgmental space for clients to work through whatever is holding them back in life. My clients appreciate the openness that is held in session and the clarity that they discover when they have the space to explore everything they are feeling.

        p Specialties: Adults, Teens, Couples, LGBTQIAAP, Relationships, Poly, Mindfulness, Personal Growth, Self-Sabotage, Sexual Abuse, Anxiety, Shame.

        p I work well with adults who:
        ul
          li Want a stable, attentive, spacious listener
          li Value a therapist who models personal growth, courage, and vulnerability

        p I work well with teens who:
        ul
          li Are highly sensitive and intelligent
          li Struggle with bullying 
          li Need an adult who respects them and can understand their world

        p I work well with couples who:
        ul
          li Are willing to hear how they contribute to their partner's defensiveness
          li Are willing to look inside at what they can change
          li Are willing to be vulnerable

        #therapy-profile.vspace-giant
          #profile-pic
            img.media-left(src='/images/professional1.jpg' width='400')

          +triangle-row

          #profile-text.vspace
            p Raine Revere graduated from Naropa University with a Masters Degree in Contemplative Psychotherapy. Raine openly identifies as genderfluid and embraces all identities as a path of personal and collective growth. Outside of doing counseling work, Raine works as an cryptocurrency engineer and educator.

            p Contact 
              a(href='mailto:raine@clarityofheart.com') raine@clarityofheart.com
              |  or call 720-319-8080 to schedule a session.

          +triangle-row

      .block
        a.nav-link.button.hspace-lg(href='javascript:void(0);' rel='home') Back

    .nav-content(rel='crypto').hide
      .block.pad.left
        h1.vspace.center Crypto
        p Raine Revere is a respected smart contract developer in the Ethereum community. Raine's areas of expertise include smart contract security and high-level architecture. As the lead engineer for ShapeShift's <a href='https://prism.exchange' target='_blank'>Prism</a> platform, Raine helped develop a decentralized digital asset management platform that secures users' funds entirely on the Ethereum network.

        img.vspace(src='/images/denver-meetup1.jpg')
        img.vspace(src='/images/denver-meetup2.jpg')

        .vspace-giant.text-center
          +triangle-row

          h1 Prism Tour
          ul#tour.nobullets
            li
              span.text-dim 7/18/17 
              |  Denver
            li
              span.text-dim 7/28/17 
              |  Montreal
            li 
              span.text-dim 8/18/17 
              |  San Fransisco
            li 
              span.text-dim 9/24/17 
              |  Houston
            li
              span.text-dim 10/12/17
              |  Atlanta
            li 
              span.text-dim 10/27/17 
              |  San Fransisco
            li 
              span.text-dim 11/2/17 
              |  CancÃºn
            li 
              span.text-dim 12/12/17 
              |  New York
            li
              span.text-dim TBD
              |  Toronto

          +triangle-row

        .text-center.vspace-lg
          p Contact 
            a(href='mailto:raine@clarityofheart.com') raine@clarityofheart.com
            |  to say hi :)

      .block
        a.nav-link.button.hspace-lg(href='javascript:void(0);' rel='home') Back

  script(type="text/javascript").

    // wrap js in IIFE to create local scope
    (() => {

    // cache width, height, and elements
    let h = document.body.offsetHeight
    let w = document.body.offsetWidth
    const therapy = document.getElementsByClassName('site-therapy')[0].firstChild
    const engineering = document.getElementsByClassName('site-engineering')[0].firstChild
    let disableMouseMove = false
    const innerSensitivy = 1.2
    const outerSensitivity = 1.0
    const outOfFocusSensitivity = 20

    // reset the global w/h variables on resize
    window.addEventListener('resize', function resize(e) {
      h = document.body.offsetHeight
      w = document.body.offsetWidth
    })

    // disable the mouse move effect if on a touch device
    document.body.addEventListener('touchstart', function hover(e) {
      disableMouseMove = true
    })

    document.body.addEventListener('mousemove', function move(e) {
      if (disableMouseMove) return
      document.body.className = document.body.className.replace('mouse-move-disabled', '')

      // out-of-focus
      const clientX = e.clientX / outOfFocusSensitivity
      const clientY = e.clientY / outOfFocusSensitivity
      const modX = clientX % 10
      const modY = clientY % 10
      const outOfFocusX = modX < 5 ? modX : 5 - clientX % 5
      const outOfFocusY = modY < 5 ? modY : 5 - clientY % 5

      // distance to center
      const xCenter = Math.floor(Math.abs(e.clientX - w/2)) / outerSensitivity + w/4

      therapy.style.left = Math.min((xCenter - w/2) / innerSensitivy, 0) + outOfFocusX + 'px'
      engineering.style.left = Math.max((w - xCenter - w/2) / innerSensitivy, 5) + outOfFocusY + 'px'
    })

    const navContent = document.getElementsByClassName('nav-content')

    // navigate to a section with a specific rel attribute
    function navigate(rel) {

      // hide or show all content sections
      for (var i=0; i<navContent.length; i++) {
        (i => {
          let contentRel = navContent[i].getAttribute('rel')
          navContent[i].className = navContent[i].className.replace(/\bhide\b/, '')

          // hide other sections
          if (contentRel !== rel) {
            navContent[i].className += ' hide'
          }
          // scroll desired section into view
          else {
            // delay briefly so that other elements are hidden first
            // otherwise the calculations will be off
            setTimeout(() => {
              navContent[i].scrollIntoView(true)
            }, 10)
          }
        })(i)
      }
    }

    // click events
    const navLinks = document.getElementsByClassName('nav-link')
    for (var i=0; i<navLinks.length; i++) {
      (i => {
        navLinks[i].addEventListener('click', e => {
          e.preventDefault()

          // navigate to section
          const rel = navLinks[i].getAttribute('rel')
          navigate(rel)
        })
      })(i)
    }

    // surround an element in <strike>
    function strike(el) {
      el.innerHTML = `<strike>${el.innerHTML}</strike>`
    }

    // parse the tour date from the tour item element
    function getTourDate(el) {
      const space = el.innerText.trim().indexOf(' ')
      return new Date(el.innerText.trim().slice(0, space))
    }

    // strike through past tour dates
    const tour = document.getElementById('tour')
    for (var i=0; i<tour.childNodes.length; i++) {
      let item = tour.childNodes[i]
      if (getTourDate(item) < new Date()) {
        strike(item)
      }
    }

    })()

